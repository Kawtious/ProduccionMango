#p_load("base64enc", "htmltools", "mime", "xfun", "prettydoc", "readr", "knitr", "DT", "dplyr", "ggplot2", "plotly", "scales", "tidyverse", "gridExtra", "modeest" , "fdth", "GGally", "psych", "gridExtra", "readxl")
#p_load(rmdformats, viridis)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/R/Aplicada")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot)
library(ggplot2)
library(DT)
df <- iris
datatable(df)
ggplot(df, aes(Petal.Length, Petal.Width) ) + geom_point(aes(col=Species), size=4)
set.seed(101)
irisCluster <- kmeans(df[,1:4], center=3, nstart = 20    )
irisCluster
#install.packages("pacman")
#library(pacman)
#p_load("base64enc", "htmltools", "mime", "xfun", "prettydoc", "readr", "knitr", "DT", "dplyr", "ggplot2", "plotly", "scales", "tidyverse", "gridExtra", "modeest" , "fdth", "GGally", "psych", "gridExtra", "readxl")
#p_load(rmdformats, viridis)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/R/Aplicada")
table(irisCluster$cluster, df$Species)
library(cluster)
clusplot(iris, irisCluster$cluster, color=T, shade = T, lines=0 )
knitr::opts_chunk$set(echo = TRUE)
clean_data <- prodMiel %>%
drop_na()
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMielaux <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center= 3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
clean_data <- prodMiel %>%
drop_na()
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMielaux <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center= 3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
clusplot(prodMiel, prodMielCluster$cluster, color= T, shade= T, lines=0)
d = dist(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
clusplot(d, diss=TRUE, prodMielCluster$cluster, color=TRUE, shade = TRUE, lines=0)
d = dist(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
clusplot(d, diss= FALSE, prodMielCluster$cluster, color=TRUE, shade = TRUE, lines=0)
d = disy(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
d = daisy(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
d = dist(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
clusplot(d, diss= TRUE, prodMielCluster$cluster, color=TRUE, shade = TRUE, lines=0)
d = dist(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
clusplot(d, diss= F, prodMielCluster$cluster, color=TRUE, shade = TRUE, lines=0)
d = dist(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
clusplot(prodMiel, diss= F, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
d = dist(prodMiel) # for a distance matrix or d = daisy(DATA) for a dissimilarity matrix
clusplot(prodMiel, diss= T, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
print(prodMiel)
d = dist(prodMiel)
clusplot(d, diss= T, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
print(d)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMielaux <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center= 3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
clusplot(pridMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
clusplot(prodMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMielaux <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center= 3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
clusplot(prodMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMiel <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(EstadoProdMiel[,2], center=3, nstart = 20)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center=3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
#library(cluster)
clusplot(prodMiel, prodMielCluster$cluster, color=T, shade = T, lines=0)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMielaux <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center= 3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
clusplot(prodMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMielaux <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center= 3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
clusplot(prodMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
#EL 10 EN EL FOR ES EL LARGO QUE TU QUIERES, NO LA CANTIDAD DEL MUESTREO
tot.withinss <- vector(mode="character", length=15)
for (i in 1:15){
prodMielCluster <- kmeans(prodMiel[,2], center=i, nstart=20)
tot.withinss[i] <- prodMielCluster$tot.withinss
}
plot(1:15, tot.withinss, type = "b", pch=19)
#install.packages("pacman")
#library(pacman)
#p_load("base64enc", "htmltools", "mime", "xfun", "prettydoc", "readr", "knitr", "DT", "dplyr", "ggplot2", "plotly", "scales", "tidyverse", "gridExtra", "modeest" , "fdth", "GGally", "psych", "gridExtra", "readxl")
#p_load(rmdformats, viridis)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/R/Aplicada")
#library(cluster)
clusplot(iris, irisCluster$cluster, color=T, shade = T, lines=0 )
#install.packages("pacman")
#library(pacman)
#p_load("base64enc", "htmltools", "mime", "xfun", "prettydoc", "readr", "knitr", "DT", "dplyr", "ggplot2", "plotly", "scales", "tidyverse", "gridExtra", "modeest" , "fdth", "GGally", "psych", "gridExtra", "readxl")
#p_load(rmdformats, viridis)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/R/Aplicada")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
library(ggplot2)
library(DT)
df <- iris
datatable(df)
View(df)
ggplot(df, aes(Petal.Length, Petal.Width) ) + geom_point(aes(col=Species), size=4)
set.seed(101)
irisCluster <- kmeans(df[,1:4], center=3, nstart = 20    )
irisCluster
table(irisCluster$cluster, df$Species)
#library(cluster)
clusplot(iris, irisCluster$cluster, color=T, shade = T, lines=0 )
#EL 10 EN EL FOR ES EL LARGO QUE TU QUIERES, NO LA CANTIDAD DEL MUESTREO
tot.withinss <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(df[,1:4], center=i, nstart=20)
tot.withinss[i] <- irisCluster$tot.withinss
}
plot(1:10, tot.withinss, type = "b", pch=19)
clusplot(prodMiel, prodMielCluster$cluster, color= c(BLUE, RED, GRAY), shade= TRUE, lines=0)
clusplot(prodMiel, prodMielCluster$cluster, color= c("BLUE", "RED", "GRAY"), shade= TRUE, lines=0)
clusplot(prodMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
clusplot(prodMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
#xfun::embed_file("AE5UC2_16.Rmd")
#xfun::embed_file("atlasapi.csv")
xfun::embed_file("EstadoProdMiel.csv")
#atlas_api <- read.csv("atlasapi.csv", sep=",", header=TRUE)
#prodMielaux <- atlas_api
prodMiel <- read_csv("EstadoProdMiel.csv")
#View(prodMiel)
datatable(prodMiel)
#prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion") %>%
#ggplot(aes(x = YEAR, y = Produccion, color = Estados)) +
#   geom_line() +
#   geom_point(size= 5)
ggplot(prodMiel, aes(Year, ProduccionMiel, color = Estado) ) +
geom_line()+
geom_point(size=4)
#prodMiel[,1:3], nomas toma en cuenta las columans de datos que queremos
#nstart el numero de interacciones aleatorias que intentara el codigo
set.seed(101)
prodMielCluster <- kmeans(prodMiel[,2], center= 3, nstart = 20)
prodMielCluster
#prodEstadosMiel <- prodMiel %>%
#  pivot_longer(-YEAR, names_to = "Estados", values_to = "Produccion")
#Verifica cuantas coincidencias tienen según los 3 cluster
#table(prodMielCluster$cluster, variable categorica (estados))
table(prodMielCluster$cluster, prodMiel$Estado)
clusplot(prodMiel, prodMielCluster$cluster, color= TRUE, shade= TRUE, lines=0)
#EL 10 EN EL FOR ES EL LARGO QUE TU QUIERES, NO LA CANTIDAD DEL MUESTREO
tot.withinss <- vector(mode="character", length=15)
for (i in 1:15){
prodMielCluster <- kmeans(prodMiel[,2], center=i, nstart=20)
tot.withinss[i] <- prodMielCluster$tot.withinss
}
plot(1:15, tot.withinss, type = "b", pch=19)
install.packages("pacman")
library(pacman)
p_load("base64enc", "htmltools", "mime", "xfun", "prettydoc", "readr", "knitr", "DT", "dplyr", "ggplot2", "plotly", "scales", "tidyverse", "gridExtra", "modeest" , "fdth", "GGally", "psych", "gridExtra", "readxl")
install.packages("pacman")
library(pacman)
p_load("base64enc", "htmltools", "mime", "xfun", "prettydoc", "readr", "knitr", "DT", "dplyr", "ggplot2", "plotly", "scales", "tidyverse", "gridExtra", "modeest" , "fdth", "GGally", "psych", "gridExtra", "readxl")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/R/Aplicada")
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
#xfun::embed_file("")
setwd("~/GitHub/ProduccionMango/Final")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
#xfun::embed_file("")
xfun::embed_file("TemperaturasPromAnualPorEstado.xlsx")
library(readxl)
TemperaturasPromAnualPorEstado <- read_excel("TemperaturasPromAnualPorEstado.xlsx")
View(TemperaturasPromAnualPorEstado)
library(readxl)
TemperaturasPromAnualPorEstado <- read_excel("TemperaturasPromAnualPorEstado.xlsx")
View(TemperaturasPromAnualPorEstado)
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.xlsx")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.xlsx")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
#prodMango <- read_excel("")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
#prodMango <- read_excel("")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
#prodMango <- read_excel("")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
#prodMango <- read_excel("")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
#prodMango <- read_excel("")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
datatable(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
#prodMango <- read_excel("")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
datatable(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
xfun::embed_file("TemperaturasPromAnualPorEstado.csv")
#prodMango <- read_excel("")
temp <- read.csv("TemperaturasPromAnualPorEstado.csv")
View(temp)
datatable(temp)
datatable(temp)
temp <- read.csv("aaaaa.csv")
View(temp)
temp <- read_excel("TemperaturasPromAnualPorEstado.xlsx")
View(temp)
prodMango <- read.excel("ProducciónMangos.xlsx")
prodMango <- read_excel("ProducciónMangos.xlsx")
prodMango <- read_excel("ProducciónMangos.xlsx")
View(prodMango)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/ProduccionMango/Final")
prodMango <- read_excel("ProducciónMangos.xlsx")
View(prodMango)
temp <- read_excel("TemperaturasPromAnualPorEstado.xlsx")
View(temp)
#datatable(prodMango)
datatable(temp)
library(pacman)
p_load(rmdformats, readr, readxl, ggplot2, plotly, DT, xfun, gridExtra, leaflet, GGally, psych, corrplot, cluster)
xfun::embed_file("ProyectoFinalAgricultura.Rmd")
#Producción de mango
xfun::embed_file("")
#Producción de mango
xfun::embed_file("ProduccionMangos.xlsx")
#Temperaturas de México
xfun::embed_file("TemperaturasPromAnualPorEstado.xlsx")
prodMangos <- filter(pordMango, Ano %in% seq(2018,2020))
prodMango <- read_excel("ProducciónMangos.xlsx")
prodMango <- read_excel("ProduccionMangos.xlsx")
View(prodMango)
prodMangos <- filter(pordMango, Ano %in% seq(2018,2020))
prodMangos <- filter(prodMango, Ano %in% seq(2018,2020))
prodMangos <- filter(prodMango, YEAR %in% seq(2018,2020))
datatable(prodMangos)
prodMangos <- filter(prodMango, YEAR %in% seq(2018,2020))
datatable(prodMangos)
datatable(prodMango)
datatable(temp)
multi.hist(x = prodMango, dcol = c("blue", "red"), dlty = c("dotted", "solid"), main = "")
multi.hist(x = prodMango[,2], dcol = c("blue", "red"), dlty = c("dotted", "solid"), main = "")
multi.hist(x = prodMango[,3:6], dcol = c("blue", "red"), dlty = c("dotted", "solid"), main = "")
multi.hist(x = prodMango[,3:4], dcol = c("blue", "red"), dlty = c("dotted", "solid"), main = "")
multi.hist(x = prodMango[,3:5], dcol = c("blue", "red"), dlty = c("dotted", "solid"), main = "")
hist(prodMango)
prodMango <- read_excel("ProduccionMangos.xlsx")
View(prodMango)
prodMango <- read_excel("ProduccionMangos.xlsx")
View(prodMango)
Cierre_agricola <- read_csv("ProduccionMangos.xlsx",
locale = locale(encoding = "ISO-8859-1"))
prodMango <- read_excel("ProduccionMangos.xlsx")
#View(prodMango)
Cierre_agricola <- read_csv("ProduccionMangos.xlsx",
locale = locale(encoding = "ISO-8859-1"))
View(Cierre_agricola)
datatable(prodMango)
datatable(temp)
